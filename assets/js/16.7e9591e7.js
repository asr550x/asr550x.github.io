(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{50:function(t,a,v){"use strict";v.r(a);var _=v(0),s=Object(_.a)({},function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"restful-api-规范"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#restful-api-规范","aria-hidden":"true"}},[t._v("#")]),t._v(" RESTful API 规范")]),t._v(" "),v("h2",{attrs:{id:"restful-api-约定"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#restful-api-约定","aria-hidden":"true"}},[t._v("#")]),t._v(" RESTful API 约定")]),t._v(" "),v("h3",{attrs:{id:"http-动词"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http-动词","aria-hidden":"true"}},[t._v("#")]),t._v(" HTTP 动词")]),t._v(" "),v("p",[t._v("使用 HTTP 动词，如 POST， GET， PUT， DELETE，HEAD 等。文档使用 HTTP/1.1 "),v("a",{attrs:{href:"http://tools.ietf.org/html/rfc2616",target:"_blank",rel:"noopener noreferrer"}},[t._v("rfc2616"),v("OutboundLink")],1),t._v("。")]),t._v(" "),v("h3",{attrs:{id:"restful-url"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#restful-url","aria-hidden":"true"}},[t._v("#")]),t._v(" RESTful URL")]),t._v(" "),v("ul",[v("li",[t._v("在可能的情况下, 要保持 URL 中不作出现动词，URL 仅作为资源描述， 同时结合 HTTP 动词实现动作， 如删除某个资源： DELETE URL。")]),t._v(" "),v("li",[t._v("另外可以通过 Query String 传递参数使 URL 变得灵活")]),t._v(" "),v("li",[t._v("URL 全部使用小写字母，并且使用下划线分割单词。")])]),t._v(" "),v("h3",{attrs:{id:"http-status-code"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http-status-code","aria-hidden":"true"}},[t._v("#")]),t._v(" HTTP Status Code")]),t._v(" "),v("p",[t._v("合理的使用 20X， 30X，40X，50X 等返回码。例如一个 URL 不存在，那么服务器 HTTP Status Code 就不应该假装正常来返回 200 和一些描述错误的数据，而应该返回错误代码 404 和 错误描述的数据, 约定如下：")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("状态码")]),t._v(" "),v("th",[t._v("含义")]),t._v(" "),v("th",[t._v("说明")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("200")]),t._v(" "),v("td",[t._v("OK")]),t._v(" "),v("td",[t._v("请求成功")])]),t._v(" "),v("tr",[v("td",[t._v("201")]),t._v(" "),v("td",[t._v("CREATED")]),t._v(" "),v("td",[t._v("创建成功")])]),t._v(" "),v("tr",[v("td",[t._v("202")]),t._v(" "),v("td",[t._v("ACCEPTED")]),t._v(" "),v("td",[t._v("更新成功")])]),t._v(" "),v("tr",[v("td",[t._v("400")]),t._v(" "),v("td",[t._v("BAD REQUEST")]),t._v(" "),v("td",[t._v("包含不支持的参数")])]),t._v(" "),v("tr",[v("td",[t._v("401")]),t._v(" "),v("td",[t._v("UNAUTHORIZED")]),t._v(" "),v("td",[t._v("未授权")])]),t._v(" "),v("tr",[v("td",[t._v("403")]),t._v(" "),v("td",[t._v("FORBIDDEN")]),t._v(" "),v("td",[t._v("被禁止访问")])]),t._v(" "),v("tr",[v("td",[t._v("404")]),t._v(" "),v("td",[t._v("NOT FOUND")]),t._v(" "),v("td",[t._v("请求的资源不存在")])]),t._v(" "),v("tr",[v("td",[t._v("500")]),t._v(" "),v("td",[t._v("INTERNAL SERVER ERROR")]),t._v(" "),v("td",[t._v("内部错误")])])])]),t._v(" "),v("h3",{attrs:{id:"http-header"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http-header","aria-hidden":"true"}},[t._v("#")]),t._v(" HTTP Header")]),t._v(" "),v("p",[t._v("除了 HTTP 协议相关文档定义的头外，所有私有的头，都以 "),v("code",[t._v("X-HUITEK-")]),t._v(" 开头")]),t._v(" "),v("h3",{attrs:{id:"response-content"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#response-content","aria-hidden":"true"}},[t._v("#")]),t._v(" Response Content")]),t._v(" "),v("p",[t._v("目前我们的 Response Content 使用 JSON 规范 "),v("a",{attrs:{href:"http://json.org",target:"_blank",rel:"noopener noreferrer"}},[t._v("json.org"),v("OutboundLink")],1),t._v(" 数据，无论 HTTP 返回码是 20X或者40X或者50X，如果 HTTP 协议中定义的动作的 Response Content 不为空，那么该接口都应该返回 JSON 格式的数据作为 Response Content。")]),t._v(" "),v("h3",{attrs:{id:"编码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#编码","aria-hidden":"true"}},[t._v("#")]),t._v(" 编码")]),t._v(" "),v("p",[t._v("使用 UTF-8 编码, 且JSON 返回的数据为 Content-Type:application/json; charset=UTF-8")]),t._v(" "),v("h2",{attrs:{id:"数据模型定义"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据模型定义","aria-hidden":"true"}},[t._v("#")]),t._v(" 数据模型定义")]),t._v(" "),v("h3",{attrs:{id:"数据字段和参数命名约定"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据字段和参数命名约定","aria-hidden":"true"}},[t._v("#")]),t._v(" 数据字段和参数命名约定")]),t._v(" "),v("p",[t._v("驼峰命名")]),t._v(" "),v("h3",{attrs:{id:"数据字段类型或者数据格式约定"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据字段类型或者数据格式约定","aria-hidden":"true"}},[t._v("#")]),t._v(" 数据字段类型或者数据格式约定")]),t._v(" "),v("ul",[v("li",[t._v("时间类型格式为 "),v("code",[t._v("yyyy-MM-dd'T'HH:mm:ss.SSSZ")]),t._v(", 如 "),v("code",[t._v("2015-02-12T17:08:49.682+0800")])])]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("字母")]),t._v(" "),v("th",[t._v("含义")]),t._v(" "),v("th",[t._v("格式")]),t._v(" "),v("th",[t._v("示例")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("y")]),t._v(" "),v("td",[t._v("AD 年")]),t._v(" "),v("td",[t._v("yyyy")]),t._v(" "),v("td",[t._v("2015")])]),t._v(" "),v("tr",[v("td",[t._v("M")]),t._v(" "),v("td",[t._v("月")]),t._v(" "),v("td",[t._v("MM")]),t._v(" "),v("td",[t._v("02")])]),t._v(" "),v("tr",[v("td",[t._v("d")]),t._v(" "),v("td",[t._v("日")]),t._v(" "),v("td",[t._v("dd")]),t._v(" "),v("td",[t._v("12")])]),t._v(" "),v("tr",[v("td",[t._v("H")]),t._v(" "),v("td",[t._v("小时")]),t._v(" "),v("td",[t._v("HH")]),t._v(" "),v("td",[t._v("17")])]),t._v(" "),v("tr",[v("td",[t._v("m")]),t._v(" "),v("td",[t._v("分钟")]),t._v(" "),v("td",[t._v("mm")]),t._v(" "),v("td",[t._v("08")])]),t._v(" "),v("tr",[v("td",[t._v("s")]),t._v(" "),v("td",[t._v("秒")]),t._v(" "),v("td",[t._v("ss")]),t._v(" "),v("td",[t._v("49")])]),t._v(" "),v("tr",[v("td",[t._v("S")]),t._v(" "),v("td",[t._v("毫秒")]),t._v(" "),v("td",[t._v("SSS")]),t._v(" "),v("td",[t._v("682")])]),t._v(" "),v("tr",[v("td",[t._v("Z")]),t._v(" "),v("td",[t._v("时区")]),t._v(" "),v("td",[t._v("Z")]),t._v(" "),v("td",[t._v("+0800")])])])]),t._v(" "),v("ul",[v("li",[t._v("所有接口中相同意义的字段，没有特殊原因，都使用同一个名称 (创建一个文件放通用的字段名称和涵义，以及命名规范，比如time还是datetime, 比如单数还是复数的命名约定，什么时候可以用拼音，等等，并放链接指向这个文件)")])]),t._v(" "),v("h3",{attrs:{id:"返回内容格式定义"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#返回内容格式定义","aria-hidden":"true"}},[t._v("#")]),t._v(" 返回内容格式定义")]),t._v(" "),v("p",[t._v("JSON Object 是 "),v("a",{attrs:{href:"json.org"}},[t._v("json.org")]),t._v(" 定义的合法的 json 对象(可为 null)")]),t._v(" "),v("ul",[v("li",[t._v("正确数据格式")])]),t._v(" "),v("div",{staticClass:"language-json extra-class"},[v("pre",{pre:!0,attrs:{class:"language-json"}},[v("code",[v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token property"}},[t._v('"data"')]),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("JSON Object"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// or")]),t._v("\n\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token property"}},[t._v('"data"')]),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("JSON Object"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n")])])]),v("p",[t._v("除了必含属性 data 以外，还可以定义可选属性 meta 和 debug，除这两个属性外，没有特别的需求，不再定义其它属性, 此时格式如下。其中建议 meta 属性存放接口内容无关的信息，而 debug 属性可以在 URL 中传入 debug 参数来开启。这两个属性在数据功能上不影响接口的使用。")]),t._v(" "),v("div",{staticClass:"language-json extra-class"},[v("pre",{pre:!0,attrs:{class:"language-json"}},[v("code",[v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token property"}},[t._v('"meta"')]),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("JSON Object"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token property"}},[t._v('"data"')]),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("JSON Object"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token property"}},[t._v('"debug"')]),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("JSON Object"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// or")]),t._v("\n\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token property"}},[t._v('"meta"')]),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("JSON Object"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token property"}},[t._v('"data"')]),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("JSON Object"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token property"}},[t._v('"debug"')]),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("JSON Object"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n")])])]),v("ul",[v("li",[t._v("出错返回数据格式")])]),t._v(" "),v("div",{staticClass:"language-json extra-class"},[v("pre",{pre:!0,attrs:{class:"language-json"}},[v("code",[v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token property"}},[t._v('"code"')]),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token property"}},[t._v('"message"')]),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),v("p",[t._v("所有的错误返回 JSON 数据中必须包含属性：code, message；可选属性： path, queryString, timestamp，除此之外，各个模块可以根据需要添加 meta 和 debug 属性，以便给开发者可能提供更多信息。")]),t._v(" "),v("p",[t._v("必含属性值格式定义如下：")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("属性")]),t._v(" "),v("th",[t._v("类型")]),t._v(" "),v("th",[t._v("可选")]),t._v(" "),v("th",[t._v("格式定义")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("code")]),t._v(" "),v("td",[t._v("string")]),t._v(" "),v("td",[t._v("required")]),t._v(" "),v("td",[t._v("数字")])]),t._v(" "),v("tr",[v("td",[t._v("message")]),t._v(" "),v("td",[t._v("string")]),t._v(" "),v("td",[t._v("required")]),t._v(" "),v("td",[t._v("简短的字符串, 仅供 API 调用者参考，而不推荐 API 调用者直接使用 code 和 message 显示给最终用户")])])])]),t._v(" "),v("ul",[v("li",[t._v("错误码定义")])]),t._v(" "),v("p",[t._v("这里的错误码指业务中各 API 对自身出错情况类型的定义，与 HTTP Status Code 没有一一对应的关系，但是 API 返回错误码时需要合理的使用 HTTP Status Code。")]),t._v(" "),v("p",[t._v("错误码定义示例：")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("错误代码")]),t._v(" "),v("th",[t._v("错误描述")]),t._v(" "),v("th",[t._v("HTTP Status Code")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("1000000")]),t._v(" "),v("td",[t._v("未知错误")]),t._v(" "),v("td",[t._v("400")])]),t._v(" "),v("tr",[v("td",[t._v("1000001")]),t._v(" "),v("td",[t._v("需要权限")]),t._v(" "),v("td",[t._v("403")])]),t._v(" "),v("tr",[v("td",[t._v("1000002")]),t._v(" "),v("td",[t._v("资源不存在")]),t._v(" "),v("td",[t._v("404")])]),t._v(" "),v("tr",[v("td",[t._v("1000003")]),t._v(" "),v("td",[t._v("参数不全")]),t._v(" "),v("td",[t._v("400")])]),t._v(" "),v("tr",[v("td",[t._v("1000004")]),t._v(" "),v("td",[t._v("认证错误")]),t._v(" "),v("td",[t._v("401")])]),t._v(" "),v("tr",[v("td",[t._v("1000005")]),t._v(" "),v("td",[t._v("签名错误")]),t._v(" "),v("td",[t._v("400")])]),t._v(" "),v("tr",[v("td",[t._v("1000006")]),t._v(" "),v("td",[t._v("请求失效")]),t._v(" "),v("td",[t._v("400")])])])]),t._v(" "),v("p",[t._v("各服务的 API 错误码需要自行定义。")]),t._v(" "),v("p",[t._v("这就要求所有业务服务的实现时的一个交付项必须是该服务的错误码表。（建议有一个约定的文件名/URL）")]),t._v(" "),v("h2",{attrs:{id:"接口版本"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#接口版本","aria-hidden":"true"}},[t._v("#")]),t._v(" 接口版本")]),t._v(" "),v("hr"),t._v(" "),v("p",[t._v("使用阿拉伯数字在 Path 的第一段中标示")])])},[],!1,null,null,null);a.default=s.exports}}]);